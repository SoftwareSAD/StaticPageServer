{"version":3,"sources":["webpack:///webpack/bootstrap 38ac4201cfb5ecb8bb9d","webpack:///external \"express\"","webpack:///external \"mongoose\"","webpack:///./server/function/function.js","webpack:///external \"crypto\"","webpack:///./server/model/cinema.js","webpack:///external \"body-parser\"","webpack:///./server/index.js","webpack:///external \"babel-core/register\"","webpack:///external \"babel-polyfill\"","webpack:///./server/server.js","webpack:///external \"nuxt\"","webpack:///./server/api/index.js","webpack:///./server/api/smsverity.js","webpack:///external \"http\"","webpack:///external \"querystring\"","webpack:///./server/config.js","webpack:///./server/api/movie.js","webpack:///./server/model/movies.js","webpack:///external \"tracer\"","webpack:///./server/api/cinema.js","webpack:///./server/api/users.js","webpack:///./server/model/users.js","webpack:///external \"jsonwebtoken\"","webpack:///external \"express-jwt\"","webpack:///./server/api/news.js","webpack:///./server/model/news.js","webpack:///./server/model/videos.js","webpack:///external \"vue\"","webpack:///./nuxt.config.js","webpack:///./package.json"],"names":["logger","require","console","md5","crypto","createHash","_dbSuccess","res","msg","data","errorCode","json","_dbError","_flipPage","totals","pages","pageCurrent","_encryptedPWD","password","update","digest","_queryRouter","req","next","findRouter","RouterModel","find","Schema","mongoose","cinemaSchema","id","String","cinema_name","district","online_moive","Array","address","telephone","img_url","CinemaModel","model","host","process","env","HOST","port","PORT","eventBus","Vue","app","set","use","bodyParser","api","config","dev","start","nuxt","Nuxt","builder","Builder","build","render","listen","log","router","express","Router","Promise","global","connect","db","connection","on","error","bind","once","users","smsverity","movie","cinema","news","smsapi","SMS","user","statusStr","result","post","smscontent","body","code","phone","cellphone","pass","content","queryString","stringify","options","hostname","path","method","request","http","response","setEncoding","err","end","module","exports","url","domain","scheme","database","username","InitAdmin","email","portrait","get","page_length","MoviesArr","MovieModel","online_time","$regex","exec","findMovies","YiArr","WanArr","item","movie_price","movie_total_price","indexOf","YiStr","split","YiNum","Number","push","WanStr","WanNum","compare","value1","value2","sort","i","length","price","Arr","ob","JSON","parse","limit","name","query","movie_name","then","resDb","catch","img","src","$options","key","type","page","currentPage","count","skip","movie_type","country","$or","year","storeMovie","starArr","movie_star","starNum","sortID","$lt","collation","numericOrdering","searchByYear","inputArr","outputArr","startYear","endYear","j","searchByType","searchByCountry","MoviesArr1","MoviesArr2","movieSchema","movie_ename","movie_time","director","director_src","actor","actor_src","introduction","cinemaArr","findCinemas","brand","substring","cinemaName","jwt","expressWebToken","jwtSecret","jwtExpire","requestProperty","credentialsRequired","secret","Object","setPrototypeOf","findUser","UsersModel","checkPwd","inputPwd","status","message","account","token","sign","expiresIn","cell","newUser","save","deleUser","remove","foo","bar","parseInt","params","sendStatus","usersSchema","default","newsArr","NewsModel","findNews","videoArr","VideoModel","findVideo","newsSchema","title","abstract","article","cover_img_src","content_img_src","date","view_count","videoSchema","pkg","mode","head","titleTemplate","meta","charset","hid","description","link","loading","color","css","modules","serverMiddleware","baseUrl","BASE_URL","extractCSS","vendor","extend","ctx","isDev","isClient","rules","enforce","test","loader","exclude"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 38ac4201cfb5ecb8bb9d","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 1\n// module chunks = 0","import crypto from 'crypto'\r\nconst logger = require('tracer').console() // console追踪库\r\nvar md5 = crypto.createHash('md5')\r\n\r\n/**\r\n * @desc mongodb 操作成功函数,返回到前端\r\n * @errorCode 错误代码\r\n * */\r\nasync function _dbSuccess (res, msg, data, errorCode) {\r\n  return res.json({\r\n    msg: msg || '操作成功',\r\n    data: data || [],\r\n    errorCode: errorCode || 0\r\n  })\r\n}\r\n/**\r\n * @desc mongodb 操作失败函数\r\n * @errorCode 错误代码\r\n * */\r\nfunction _dbError (res, msg, data, errorCode) {\r\n  return res.json({\r\n    msg: msg || '服务端错误',\r\n    data: data || [],\r\n    errorCode: errorCode || 1\r\n  })\r\n}\r\n\r\n/**\r\n * @desc mongodb 分页函数\r\n * @errorCode\r\n * @{total总条数,pageTotal总页数,pageNumber当前页数}\r\n * */\r\nasync function _flipPage (res, data, errorCode, msg, {totals, pages, pageCurrent}) {\r\n  return res.json({\r\n    errorCode: errorCode || 0,\r\n    data: data || [],\r\n    msg: msg || '操作成功',\r\n    totals: totals,\r\n    pages: pages,\r\n    pageCurrent: pageCurrent\r\n  })\r\n}\r\n\r\n/**\r\n * @desc 密码加密模块\r\n * */\r\nfunction _encryptedPWD (password) {\r\n  return md5.update(password).digest('hex');\r\n}\r\n\r\n/**\r\n * @desc 查询路由名称\r\n * */\r\nasync function _queryRouter (req, res, next) {\r\n  let findRouter = await RouterModel.find(req)\r\n  return findRouter\r\n}\r\n\r\nexport {_dbError, _dbSuccess, _flipPage, _encryptedPWD, _queryRouter}\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/function/function.js","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 3\n// module chunks = 0","import mongoose from \"mongoose\"\r\nconst Schema = mongoose.Schema\r\n/**\r\n * @desc 影院表\r\n */\r\nconst cinemaSchema = new Schema({\r\n  id: String,\r\n  cinema_name: String,  //电影院名字\r\n  district: String,     //区\r\n  online_moive: Array,  //上映电影的图片地址\r\n  address: String,      //电影院地址\r\n  telephone: String,     //电话\r\n  img_url: String,      //电影院的图片地址\r\n})\r\n\r\n/**\r\n * @desc构建表模型\r\n */\r\nconst CinemaModel = mongoose.model('cinema', cinemaSchema, 'cinema')\r\n\r\nexport default CinemaModel\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/model/cinema.js","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 5\n// module chunks = 0","require('babel-core/register');\r\nrequire('babel-polyfill');\r\nrequire('./server');\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/index.js","module.exports = require(\"babel-core/register\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-core/register\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 8\n// module chunks = 0","import express from 'express'\r\nimport { Nuxt, Builder } from 'nuxt'\r\nimport api from './api'\r\nimport bodyParser from 'body-parser'\r\nimport Vue from 'vue'\r\nconst host = process.env.HOST || '127.0.0.1'\r\nconst port = process.env.PORT || 3000\r\nconst eventBus = new Vue();\r\nconst app = express()\r\napp.set('port', port)\r\napp.use(bodyParser.json())\r\napp.use('/api', api)\r\napp.set(\"eventBus\", eventBus)\r\n\r\n// Import and Set Nuxt.js options\r\nlet config = require('../nuxt.config.js')\r\nconfig.dev = !(process.env.NODE_ENV === 'production')\r\n\r\nasync function start() {\r\n  // Init Nuxt.js\r\n  const nuxt = new Nuxt(config)\r\n  // Build only in dev mode\r\n  if (config.dev) {\r\n    const builder = new Builder(nuxt)\r\n    await builder.build()\r\n  }\r\n\r\n  // Give nuxt middleware to express\r\n  app.use(nuxt.render)\r\n\r\n  // Listen the server\r\n  app.listen(port, host)\r\n  console.log('Server listening on http://' + host + ':' + port) // eslint-disable-line no-console\r\n}\r\nstart()\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/server.js","module.exports = require(\"nuxt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"nuxt\"\n// module id = 10\n// module chunks = 0","import express from 'express'\r\nimport mongoose from 'mongoose'\r\nimport  smsverity from './smsverity'\r\nimport movie from './movie'\r\nimport cinema from './cinema'\r\nimport users from './users'\r\nimport news from './news'\r\nconst router = express.Router()\r\n\r\nmongoose.Promise = global.Promise\r\n\r\nmongoose.connect('mongodb://sysu:sysu2018@120.77.37.156:27017/maoyanmovie?authSource=admin');\r\nvar db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, '数据库连接失败:'));\r\ndb.once('open', function() {\r\n  console.log('数据库已连接');\r\n});\r\n\r\n\r\n/**用户注册登录选择*/\r\nrouter.use(users)\r\n\r\n\r\n/**手机注册验证*/\r\nrouter.use(smsverity)\r\n\r\n/**处理电影页面*/\r\nrouter.use(movie)\r\n\r\n\r\n/**处理影院页面*/\r\nrouter.use(cinema)\r\n\r\n/**处理资讯页面*/\r\nrouter.use(news)\r\n\r\nexport default router\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/index.js","import crypto from 'crypto'\r\nimport http from 'http'\r\nimport queryString from 'querystring'\r\nimport {SMS} from '../config'\r\nimport { Router } from 'express'\r\nconst router = Router()\r\n\r\n//config\r\nconst smsapi= SMS.smsapi\r\nconst user = SMS.user\r\nconst password = SMS.password\r\nvar md5 = crypto.createHash('md5')\r\n\r\nfunction statusStr(result){\r\n  switch(result)\r\n  {\r\n    case '0':\r\n      console.log('短信发送成功')\r\n      break\r\n    case '-1':\r\n      console.log('参数不全')\r\n      break\r\n    case '-2':\r\n      console.log('服务器空间不支持,请确认支持curl或者fsocket，联系您的空间商解决或者更换空间！')\r\n      break\r\n    case '30':\r\n      console.log('密码错误')\r\n      break\r\n    case '40':\r\n      console.log('账户不存在')\r\n      break\r\n    case '41':\r\n      console.log('余额不足')\r\n      break\r\n    case '42':\r\n      console.log('账户已过期')\r\n      break\r\n    case '43':\r\n      console.log('IP地址限制')\r\n      break\r\n    case '50':\r\n      console.log('内容含有敏感字')\r\n      break\r\n  }\r\n}\r\n\r\nrouter.post('/sms', async(req, res, next) => {\r\n    var smscontent = \"尊敬的用户，您的注册验证码为\" + req.body.code;\r\n    var phone = req.body.cellphone;\r\n    var pass = md5.update(password).digest('hex');\r\n    var data={\r\n      'u':user,\r\n      'p':pass,\r\n      'm':phone,\r\n      'c':smscontent\r\n    }\r\n    var content=queryString.stringify(data);\r\n    var options={\r\n      hostname : smsapi,\r\n      path:'/sms?'+content,\r\n      method:'GET'\r\n    }\r\n  //创建请求\r\n    var request = http.request(options,function(response){\r\n      response.setEncoding('utf-8');\r\n      response.on('data',function(result){\r\n      statusStr(result)\r\n      });\r\n      response.on('end',function(){\r\n      });\r\n    });\r\n    request.on('error',function(err){\r\n      console.error(err);\r\n    });\r\n    request.end();\r\n    return res.json({code: req.body.code})\r\n  }\r\n)\r\n\r\nexport default router\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/smsverity.js","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"querystring\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"querystring\"\n// module id = 14\n// module chunks = 0","/**\r\n * @desc db config\r\n * */\r\nmodule.exports.config = {\r\n  url: 'mongodb://heygrandpa:SYSU2018@ds117691.mlab.com:17691', // 普通不授权模式链接mongodb\r\n  domain: 'mlab.com', // 主域名\r\n  scheme: 'mongodb', // 协议\r\n  database: 'mlab.com', // 数据库名称\r\n  username: 'heygrandpa', // 管理员用户名称\r\n  password: 'SYSU2018'// 管理员密码\r\n}\r\n\r\n/**\r\n * @desc InitAdmin\r\n * */\r\nmodule.exports.InitAdmin = {\r\n  username: 'admin', // 管理员用户昵称\r\n  password: 'admin', // 管理员密码\r\n  // nickname: 'admin', // 昵称\r\n  email: 'admin@vsorg.com', // email\r\n  cellphone: '13711111111', // phone\r\n  portrait: '../assets/img/logo/login-default-portrait.png', // 头像\r\n}\r\n\r\n/**\r\n *@desc 短信发送\r\n */\r\nmodule.exports.SMS = {\r\n  smsapi : \"api.smsbao.com\",\r\n  user : \"susie\",// 短信平台账号\r\n  password: \"smsbaoshiwojia13\", // 短信平台密码\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/config.js","import MovieModel  from '../model/movies'\r\nimport { _dbError, _dbSuccess} from '../function/function'\r\nimport { Router } from 'express'\r\nimport CinemaModel from \"../model/cinema\";\r\nconst router = Router();\r\n\r\n\r\n/**\r\n * @desc 拉取首页正在热映电影列表函数\r\n * @param 无\r\n * @return 返回前10个热映电影\r\n * */\r\n\r\nrouter.get('/getHomeHotMovies', async (req, res, next) => {\r\n  console.log('########获取前10个热映电影#########');\r\n  let page_length = 10;   // 获取前10个\r\n  let MoviesArr = await MovieModel.find({online_time: {$regex: '2018-06'}}).exec();\r\n  let findMovies = [];\r\n  let YiArr = []    // 单位：亿\r\n  let WanArr = []   // 单位：万\r\n  for (let item of MoviesArr) {\r\n    let movie_price = item.movie_total_price\r\n    if (movie_price.indexOf('亿') != -1) {\r\n      let YiStr = item.movie_total_price.split('亿')[0]\r\n      let YiNum = Number(YiStr)\r\n      YiArr.push(YiNum)\r\n    } else if (movie_price.indexOf('万') != -1) {\r\n      let WanStr = item.movie_total_price.split('万')[0]\r\n      let WanNum = Number(WanStr)\r\n      WanArr.push(WanNum)\r\n    }\r\n  }\r\n  function compare(value1, value2) {\r\n    return value2 - value1\r\n  }\r\n  YiArr.sort(compare)\r\n  // console.log(YiArr)\r\n  WanArr.sort(compare)\r\n  // console.log(WanArr)\r\n  for (var i = 0; i < page_length; i++) {\r\n    if (i < YiArr.length) {\r\n      let price = String(YiArr[i]) + '亿'\r\n      console.log(price)\r\n      let Arr = await MovieModel.find({movie_total_price: price, online_time: {$regex: '2018-06'}}).exec();\r\n      for (let item of Arr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n    } else {\r\n      let price = String(WanArr[i - YiArr.length]) + '万'\r\n      let Arr = await MovieModel.find({movie_total_price: price, online_time: {$regex: '2018-06'}}).exec();\r\n      for (let item of Arr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n    }\r\n  }\r\n  for (var i = 0; i < findMovies.length; i++) {\r\n    console.log(findMovies[i].movie_total_price)\r\n  }\r\n  return _dbSuccess(res, '获取热映电影成功', findMovies)\r\n});\r\n\r\n/**\r\n * @desc 拉取首页待上映电影列表函数\r\n * @param 无\r\n * @return 返回前8个待上映电影\r\n * */\r\n\r\nrouter.get('/getHomeReadyMovies', async (req, res, next) => {\r\n  console.log('########获取前8个待上映电影#########');\r\n  let page_length = 8;   // 获取前8个\r\n  let MoviesArr = await MovieModel.find({movie_total_price: '暂无'}).limit(page_length).exec();\r\n  let findMovies = [];\r\n  for (let item of MoviesArr) {\r\n    let ob = JSON.parse(JSON.stringify(item));\r\n    findMovies.push(ob)\r\n  }\r\n  return _dbSuccess(res, '获取待上映电影成功', findMovies)\r\n\r\n});\r\n\r\n/**\r\n * @desc 获取单个电影信息的函数\r\n * @param name: 电影中文名\r\n * @return 电影对象\r\n * */\r\nrouter.get(\"/getSingleFilm\", async (req, res, next) =>{\r\n  let name = req.query.name;\r\n  console.log('########拉取电影-' + name + '#########')\r\n  MovieModel.find({movie_name: name})\r\n  .then(function (resDb) {\r\n    return _dbSuccess(res, '获取电影成功', resDb)\r\n  })\r\n  .catch(function (err) {\r\n    return _dbError(res, err)\r\n  })\r\n});\r\n\r\n/**\r\n * @desc 获取单个电影信息的函数\r\n * @param src: 电影图片链接\r\n * @return 电影对象\r\n * */\r\nrouter.get(\"/getFilmByImg\", async (req, res, next) =>{\r\n  let img = req.query.src\r\n  console.log('########通过图片链接' + img +'拉取电影#########')\r\n  if (img.indexOf('@') != -1) {\r\n    img = img.split('@')[0]\r\n  }\r\n  MovieModel.find({img: {$regex: img, $options: 'i'}})\r\n  .then(function (resDb) {\r\n    return _dbSuccess(res, '获取电影成功', resDb)\r\n  })\r\n  .catch(function (err) {\r\n    return _dbError(res, err)\r\n  })\r\n});\r\n\r\n\r\n\r\n/**\r\n * @desc 根据电影类型查询电影\r\n * @param key: 电影类型\r\n  currentPage: 当前是第几页\r\n * @return 返回30个电影\r\n * */\r\n\r\nrouter.get('/getMoviesByType', async (req, res, next) => {\r\n  console.log('########根据电影类型查询电影#########');\r\n  let page_length = 30;   // 获取30个\r\n  let key = req.query.type;\r\n  let page = req.query.currentPage;\r\n  let count = (page - 1) * page_length;\r\n  if (key == '全部') {\r\n    let MoviesArr = await MovieModel.find({}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  } else {\r\n    let MoviesArr = await MovieModel.find({movie_type: {$regex: key}}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  }\r\n});\r\n\r\n/**\r\n * @desc 根据国家查询电影\r\n * @param   country: 国家\r\n        currentPage: 当前是第几页\r\n * @return 返回30个电影\r\n * */\r\n\r\nrouter.get('/getMoviesByCountry', async (req, res, next) => {\r\n  console.log('########根据国家查询电影#########');\r\n  let page_length = 30;   // 获取30个\r\n  let key = req.query.country\r\n  let page = req.query.currentPage\r\n  let count = (page - 1) * page_length\r\n  if (key == '全部') {\r\n    let MoviesArr = await MovieModel.find({}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  } else if (key == '日韩') {\r\n    let MoviesArr = await MovieModel.find({$or:[{country:{$regex: '日本'}},{country:{$regex: '韩国'}}]}).limit(page_length).skip(count).exec();\r\n    // let MoviesArr = await MovieModel.find({country: {$or:['日本', '韩国']}}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  } else if (key == '欧洲') {\r\n    let MoviesArr = await MovieModel.find({$or:[{country:{$regex: '法国'}},{country:{$regex: '意大利'}},{country:{$regex: '西班牙'}}]}).limit(page_length).skip(count).exec();\r\n    // let MoviesArr = await MovieModel.find({country: {$or:['法国', '意大利', '西班牙']}}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  } else if (key == '其他') {\r\n    let MoviesArr = await MovieModel.find({$or:[{country:{$regex: '泰国'}},{country:{$regex: '俄罗斯'}},{country:{$regex: '澳大利亚'}}, {country:{$regex: '伊朗'}}]}).limit(page_length).skip(count).exec();\r\n    // let MoviesArr = await MovieModel.find({country: {$or:['泰国', '俄罗斯', '澳大利亚', '伊朗']}}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  } else {\r\n    if (key == '大陆') {\r\n      key = '大陆'\r\n    }\r\n    let MoviesArr = await MovieModel.find({country: {$regex: key}}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  }\r\n});\r\n\r\n/**\r\n * @desc 根据时间查询电影\r\n * @param   online_time: 上映时间\r\n            currentPage: 当前是第几页\r\n * @return 返回30个电影\r\n * */\r\n\r\nrouter.get('/getMoviesByDate', async (req, res, next) => {\r\n  console.log('########根据时间查询电影#########');\r\n  let page_length = 30;   // 获取30个\r\n  let key = req.query.online_time\r\n  let page = req.query.currentPage\r\n  let count = (page - 1) * page_length\r\n  if (key == '全部') {\r\n    let MoviesArr = await MovieModel.find({}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  } else if (key == '2018'){\r\n    let MoviesArr = await MovieModel.find({online_time: {$regex: key}}).limit(page_length).skip(count).exec();\r\n    let findMovies = [];\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', findMovies)\r\n  } else if (key == '2011-2017') {\r\n    for (var year = 2011; year <= 2017; year++) {\r\n      let MoviesArr = await MovieModel.find({online_time: {$regex: String(year)}}).limit(page_length).skip(count).exec();\r\n      let findMovies = [];\r\n      for (let item of MoviesArr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n      return _dbSuccess(res, '获取电影成功', findMovies)\r\n    }\r\n  } else if (key == '2000-2010') {\r\n    for (var year = 2000; year <= 2010; year++) {\r\n      let MoviesArr = await MovieModel.find({online_time: {$regex: String(year)}}).limit(page_length).skip(count).exec();\r\n      let findMovies = [];\r\n      for (let item of MoviesArr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n      return _dbSuccess(res, '获取电影成功', findMovies)\r\n    }\r\n  } else if (key == '90年代') {\r\n    for (var year = 1990; year < 2000; year++) {\r\n      let MoviesArr = await MovieModel.find({online_time: {$regex: String(year)}}).limit(page_length).skip(count).exec();\r\n      let findMovies = [];\r\n      for (let item of MoviesArr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n      return _dbSuccess(res, '获取电影成功', findMovies)\r\n    }\r\n  } else if (key == '80年代') {\r\n    for (var year = 1980; year < 1990; year++) {\r\n      let MoviesArr = await MovieModel.find({online_time: {$regex: String(year)}}).limit(page_length).skip(count).exec();\r\n      let findMovies = [];\r\n      for (let item of MoviesArr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n      return _dbSuccess(res, '获取电影成功', findMovies)\r\n    }\r\n  } else if (key == '70年代') {\r\n    for (var year = 1970; year < 1980; year++) {\r\n      let MoviesArr = await MovieModel.find({online_time: {$regex: String(year)}}).limit(page_length).skip(count).exec();\r\n      let findMovies = [];\r\n      for (let item of MoviesArr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n      return _dbSuccess(res, '获取电影成功', findMovies)\r\n    }\r\n  } else if (key == '更早') {\r\n    for (var year = 1900; year < 1970; year++) {\r\n      let MoviesArr = await MovieModel.find({online_time: {$regex: String(year)}}).limit(page_length).skip(count).exec();\r\n      let findMovies = [];\r\n      for (let item of MoviesArr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        findMovies.push(ob)\r\n      }\r\n      return _dbSuccess(res, '获取电影成功', findMovies)\r\n    }\r\n  }\r\n});\r\n\r\n/**\r\n * @desc 按照热度对电影排序：只对2018年的电影排序，热度用票房衡量\r\n * @param currentPage: 当前是第几页\r\n * @return 返回30项\r\n * */\r\n\r\nrouter.get('/getHotSortedMovies', async (req, res, next) => {\r\n  console.log('########按照热度对电影排序#########');\r\n  let page_length = 30;   // 获取30个\r\n  let page = req.query.currentPage\r\n  console.log(page);\r\n  let count = (page - 1) * page_length\r\n  let MoviesArr = await MovieModel.find({online_time: {$regex: '2018'}}).exec();\r\n  let findMovies = [];\r\n  let YiArr = []    // 单位：亿\r\n  let WanArr = []   // 单位：万\r\n  for (let item of MoviesArr) {\r\n    let movie_price = item.movie_total_price\r\n    if (movie_price.indexOf('亿') != -1) {\r\n      let YiStr = item.movie_total_price.split('亿')[0]\r\n      let YiNum = Number(YiStr)\r\n      YiArr.push(YiNum)\r\n    } else if (movie_price.indexOf('万') != -1) {\r\n      let WanStr = item.movie_total_price.split('万')[0]\r\n      let WanNum = Number(WanStr)\r\n      WanArr.push(WanNum)\r\n    }\r\n  }\r\n  function compare(value1, value2) {\r\n    return value2 - value1\r\n  }\r\n  YiArr.sort(compare)\r\n  WanArr.sort(compare)\r\n  let storeMovie = []\r\n  for (var i = 0; i < (YiArr.length + WanArr.length); i++) {\r\n    if (i < YiArr.length) {\r\n      let price = String(YiArr[i]) + '亿'\r\n      let Arr = await MovieModel.find({movie_total_price: price}).exec();\r\n      for (let item of Arr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        storeMovie.push(ob)\r\n      }\r\n    } else {\r\n      let price = String(WanArr[i - YiArr.length]) + '万'\r\n      let Arr = await MovieModel.find({movie_total_price: price}).exec();\r\n      for (let item of Arr) {\r\n        let ob = JSON.parse(JSON.stringify(item));\r\n        storeMovie.push(ob)\r\n      }\r\n    }\r\n  }\r\n  for (var i = count; i < count + page_length; i++) {\r\n    findMovies.push(storeMovie[i])\r\n  }\r\n  return _dbSuccess(res, '获取热映电影成功', findMovies)\r\n});\r\n\r\n/**\r\n * @desc 按照评价对电影排序：只对2018年的电影排序，评分作为衡量标准\r\n * @param currentPage: 当前是第几页\r\n * @return 返回30项\r\n * */\r\n\r\nrouter.get('/getEvalSortedMovies', async (req, res, next) => {\r\n  console.log('########按照评价对电影排序#########');\r\n  let page_length = 30;   // 获取30个\r\n  let page = req.query.currentPage\r\n  let count = (page - 1) * page_length\r\n  let MoviesArr = await MovieModel.find({online_time: {$regex: '2018'}}).exec();\r\n  let starArr = []\r\n  let findMovies = []\r\n  for (let item of MoviesArr) {\r\n    let movie_star = item.movie_star\r\n    if (movie_star.indexOf('.') != -1) {\r\n      let starNum = Number(movie_star)   // 把评分转为数字\r\n      starArr.push(starNum)\r\n    }\r\n  }\r\n  function compare(value1, value2) {\r\n    return value2 - value1\r\n  }\r\n  starArr.sort(compare)\r\n  for (var i = count; i < count + page_length; i++) {\r\n    let Arr = await MovieModel.find({movie_star: String(starArr[i])}).exec();\r\n    for (let item of Arr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n  }\r\n  return _dbSuccess(res, '获取高分电影成功', findMovies)\r\n});\r\n\r\n/**\r\n * @desc 按照时间对电影排序：对所有电影进行排序\r\n * @param currentPage: 当前是第几页\r\n * @return 返回30项\r\n * */\r\n\r\nrouter.get('/getOnlineSortedMovies', async (req, res, next) => {\r\n  console.log('########按照时间对电影排序#########');\r\n  let page_length = 30;   // 获取30个\r\n  let page = req.query.currentPage\r\n  let count = (page - 1) * page_length\r\n  let MoviesArr = await MovieModel.find({}).sort({online_time: -1}).exec();\r\n  let findMovies = [];\r\n  for (let item of MoviesArr) {\r\n    let ob = JSON.parse(JSON.stringify(item));\r\n    findMovies.push(ob)\r\n  }\r\n  return _dbSuccess(res, '获取时间排序电影成功', findMovies)\r\n});\r\n\r\n/**\r\n * @desc 获取经典影片：对所有电影排序，评分作为衡量标准\r\n * @param currentPage: 当前是第几页\r\n * @return 返回30项\r\n * */\r\n\r\nrouter.get('/getOldGoodMovies', async (req, res, next) => {\r\n  console.log('########获取经典电影#########');\r\n  let page_length = 30;   // 获取30个\r\n  let page = req.query.currentPage\r\n  let count = (page - 1) * page_length\r\n  let MoviesArr = await MovieModel.find({}).exec();\r\n  let starArr = []\r\n  let findMovies = []\r\n  for (let item of MoviesArr) {\r\n    let movie_star = item.movie_star\r\n    if (movie_star.indexOf('.') != -1) {\r\n      let starNum = Number(movie_star)   // 把评分转为数字\r\n      starArr.push(starNum)\r\n    }\r\n  }\r\n  function compare(value1, value2) {\r\n    return value2 - value1\r\n  }\r\n  starArr.sort(compare)\r\n  for (var i = count; i < count + page_length; i++) {\r\n    let Arr = await MovieModel.find({movie_star: String(starArr[i])}).exec();\r\n    for (let item of Arr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n  }\r\n  return _dbSuccess(res, '获取经典高分电影成功', findMovies)\r\n});\r\n\r\n/**\r\n * @desc 获取指定顺序地区等限制的电影列表\r\n * @param sortID: 排序方式（热门、时间等）-> 按时间排序时让未上映电影排在前面\r\n *\r\n * @return 电影对象数组\r\n * */\r\nrouter.get('/getFilmList', async (req, res, next) => {\r\n  console.log('########获取指定限制的电影列表#########');\r\n  //let currentPage = req.query.currentPage;  //当前页面\r\n  let page_length = 30;   // 每页30个\r\n  let sortID = req.query.sortID;  //排序方式\r\n  let page = req.query.currentPage\r\n  //let count = (page - 1) * page_length;\r\n  console.log(sortID);\r\n  let findMovies = [];\r\n  if(sortID == 1){\r\n    //console.log('Yes');\r\n    let MoviesArr = await MovieModel.find({online_time: {$regex: '2018'}}).limit(page_length).exec();\r\n    console.log(MoviesArr.length);\r\n\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n  }\r\n  else if(sortID == 2){\r\n    //console.log('Yes');\r\n    let MoviesArr = await MovieModel.find({movie_total_price: '暂无'}).limit(page_length).exec();\r\n    console.log(MoviesArr.length);\r\n\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n  }\r\n  else if(sortID == 3){\r\n    //console.log('Yes');\r\n    let page_length = 30;   // 获取30个\r\n    let count = (page - 1) * page_length\r\n    let MoviesArr = await MovieModel.find({movie_star: {$lt: String(10)}}).collation({\"locale\": \"zh\", numericOrdering:true}).sort({movie_star: -1}).limit(30).exec();\r\n    console.log(MoviesArr.length)\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n  }\r\n  else{\r\n    console.log('Yes');\r\n    let page_length = 30;   // 获取30个\r\n    let count = (page - 1) * page_length\r\n    let MoviesArr = await MovieModel.find({movie_name: {$regex: sortID}}).limit(page_length).exec();\r\n    //let MoviesArr = await MovieModel.find({movie_star: {$regex: /^\\d+(\\.\\d+)?$/}}).sort({movie_star: -1}).limit(60).exec()\r\n    console.log(MoviesArr.length)\r\n    for (let item of MoviesArr) {\r\n      let ob = JSON.parse(JSON.stringify(item));\r\n      findMovies.push(ob)\r\n    }\r\n  }\r\n    // let MoviesArr = await MovieModel.find({}).limit(page_length).skip(10).exec();\r\n  return _dbSuccess(res, '获取指定限制的电影列表', findMovies)\r\n});\r\n\r\n/**\r\n * @desc 根据所有条件查询电影\r\n * @param   online_time: 上映时间\r\n                country: 国家\r\n                   type: 电影类型\r\n            currentPage: 当前是第几页\r\n * @return 返回30个电影\r\n * */\r\n\r\n// 根据年份筛选\r\n function searchByYear(inputArr, year) {\r\n  let outputArr = []\r\n  let startYear = 1950\r\n  let endYear = 2025\r\n  if (year == '2018') {\r\n    startYear = 2018\r\n    endYear = 2018\r\n  } else if (year == '2011-2017') {\r\n    startYear = 2011\r\n    endYear = 2017\r\n    console.log(startYear)\r\n  } else if (year == '2000-2010') {\r\n    startYear = 2000\r\n    endYear = 2010\r\n  } else if (year == '90年代') {\r\n    startYear = 1990\r\n    endYear = 1999\r\n  } else if (year == '80年代') {\r\n    startYear = 1980\r\n    endYear = 1989\r\n  } else if (year == '70年代') {\r\n    startYear = 1970\r\n    endYear = 1979\r\n  } else if (year == '更早') {\r\n    startYear = 1950\r\n    endYear = 1969\r\n  }\r\n  for (var i = 0; i < inputArr.length; i++) {\r\n    for (var j = startYear; j <= endYear; j++) {\r\n      if (inputArr[i].online_time.indexOf(String(j)) != -1) {\r\n        outputArr.push(inputArr[i])\r\n        //console.log('Yes')\r\n      }\r\n    }\r\n    console.log(inputArr)\r\n  }\r\n  return outputArr\r\n }\r\n\r\n// 根据类型筛选\r\n function searchByType(inputArr, type) {\r\n  let outputArr = []\r\n  for(var i = 0; i < inputArr.length; i++) {\r\n    if (inputArr[i].movie_type.indexOf(type) != -1) {\r\n      outputArr.push(inputArr[i])\r\n    }\r\n  }\r\n  return outputArr\r\n }\r\n\r\n// 根据国家筛选\r\n function searchByCountry(inputArr, country) {\r\n   console.log('国家')\r\n  let outputArr = []\r\n  if (country == '全部') {\r\n    for(var i = 0; i < inputArr.length; i++) {\r\n      outputArr.push(inputArr[i])\r\n    }\r\n  } else if (country == '美国') {\r\n    for(var i = 0; i < inputArr.length; i++) {\r\n      console.log('美国')\r\n      if (inputArr[i].country.indexOf('美国') != -1) {\r\n        outputArr.push(inputArr[i])\r\n      }\r\n    }\r\n  } else if (country == '英国') {\r\n    for (var i = 0; i < inputArr.length; i++) {\r\n      if (inputArr[i].country.indexOf('英国') != -1) {\r\n        outputArr.push(inputArr[i])\r\n      }\r\n    }\r\n  } else if (country == '大陆') {\r\n    for(var i = 0; i < inputArr.length; i++) {\r\n      console.log('大陆')\r\n      if (inputArr[i].country.indexOf('大陆') != -1) {\r\n        outputArr.push(inputArr[i])\r\n      }\r\n    }\r\n  } else if (country == '日韩') {\r\n    for(var i = 0; i < inputArr.length; i++) {\r\n      if (inputArr[i].country.indexOf('日本') != -1 || inputArr[i].country.indexOf('韩国') != -1) {\r\n        outputArr.push(inputArr[i])\r\n      }\r\n    }\r\n  } else if (country == '欧洲') {\r\n    for(var i = 0; i < inputArr.length; i++) {\r\n      if (inputArr[i].country.indexOf('意大利') != -1 || inputArr[i].country.indexOf('西班牙') != -1 ||\r\n       inputArr[i].country.indexOf('德国') != -1 || inputArr[i].country.indexOf('波兰') != -1) {\r\n        outputArr.push(inputArr[i])\r\n      }\r\n    }\r\n  } else if (country == '其他') {\r\n    for(var i = 0; i < inputArr.length; i++) {\r\n      if (inputArr[i].country.indexOf('泰国') != -1 || inputArr[i].country.indexOf('俄罗斯') != -1 ||\r\n       inputArr[i].country.indexOf('澳大利亚') != -1 || inputArr[i].country.indexOf('伊朗') != -1) {\r\n        outputArr.push(inputArr[i])\r\n      }\r\n    }\r\n  } else {\r\n    for(var i = 0; i < inputArr.length; i++) {\r\n      if (inputArr[i].country.indexOf(country) != -1) {\r\n        outputArr.push(inputArr[i])\r\n      }\r\n    }\r\n  }\r\n  console.log('Yes')\r\n  console.log(outputArr.length)\r\n  return outputArr\r\n }\r\n\r\nrouter.get('/getMoviesByAll', async (req, res, next) => {\r\n  console.log('########根据全部条件查询电影#########');\r\n  let page_length = 30;   // 获取30个\r\n  let online_time = req.query.online_time\r\n  let country = req.query.country\r\n  let type = req.query.type\r\n  let page = req.query.currentPage\r\n  let count = (page - 1) * page_length\r\n  if (country == '全部') {  // 根据上映时间和类型搜索\r\n    let MoviesArr = await MovieModel.find({movie_type: {$regex: type}}).exec();\r\n    let findMovies = searchByYear(MoviesArr, online_time)\r\n    let result = []\r\n    for (var i = count; i < count + page_length && i < findMovies.length; i++) {\r\n      let ob = JSON.parse(JSON.stringify(findMovies[i]));\r\n      result.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', result)\r\n  } else if (online_time == '全部') {   // 根据国家和类型搜索\r\n    console.log('Yes');\r\n    let MoviesArr = await MovieModel.find({movie_type: {$regex: type}}).exec();\r\n    console.log(MoviesArr.length);\r\n    let findMovies = searchByCountry(MoviesArr, country)\r\n    console.log(findMovies.length)\r\n    let result = []\r\n    for (var i = count; i < count + page_length && i < findMovies.length; i++) {\r\n      let ob = JSON.parse(JSON.stringify(findMovies[i]));\r\n      result.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', result)\r\n  } else if (type == '全部') {   // 根据国家和上映时间搜索\r\n    let MoviesArr = await MovieModel.find({country:{$regex: country}}).exec();\r\n    let findMovies = searchByYear(MoviesArr, online_time)\r\n    console.log(findMovies)\r\n    let result = []\r\n    for (var i = count; i < count + page_length && i < findMovies.length; i++) {\r\n      let ob = JSON.parse(JSON.stringify(findMovies[i]));\r\n      result.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', result)\r\n  } else {   // 根据国家、类型和上映时间搜索\r\n    let MoviesArr1 = await MovieModel.find({movie_type: {$regex: type}}).exec(); // 按照类型的搜索结果\r\n    let MoviesArr2 = searchByYear(MoviesArr1, online_time) // 按照时间、类型的搜索结果\r\n    let findMovies = searchByCountry(MoviesArr2, country)  // 按照国家、时间、类型的搜索结果\r\n    let result = []\r\n    for (var i = count; i < count + page_length && i < findMovies.length; i++) {\r\n      let ob = JSON.parse(JSON.stringify(findMovies[i]));\r\n      result.push(ob)\r\n    }\r\n    return _dbSuccess(res, '获取电影成功', result)\r\n  }\r\n})\r\n\r\nexport default router\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/movie.js","import mongoose from 'mongoose'\r\nconst Schema = mongoose.Schema;\r\n\r\n/**\r\n * @desc 电影表\r\n */\r\n\r\nconst movieSchema = new Schema({\r\n  id: String,\r\n  movie_name: String,   //电影名\r\n  movie_ename: String,  //电影英文名\r\n  country: String,      //国家\r\n  movie_type: String,   //电影类型\r\n  movie_time: String,   //电影时长\r\n  online_time: String,  //上映时间\r\n  movie_star: String,   //用户评分\r\n  movie_total_price: String,   //票房\r\n  img: String,          //电影图片路径\r\n  director: String,     //导演，只有一个导演\r\n  director_src: String, //导演图片\r\n  actor: Array,        //演员，有多个演员\r\n  actor_src: Array,    //演员图片\r\n  introduction: String, //电影简介\r\n});\r\n\r\n/**\r\n * @desc构建表模型\r\n */\r\nconst MovieModel = mongoose.model('movie', movieSchema, 'movie');\r\n\r\nexport default MovieModel\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/model/movies.js","module.exports = require(\"tracer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tracer\"\n// module id = 18\n// module chunks = 0","import CinemaModel  from '../model/cinema'\r\nimport { Router } from 'express'\r\nimport { _dbError, _dbSuccess} from '../function/function'\r\n\r\nconst router = Router()\r\n\r\n/**\r\n * @desc 按照行政区搜索电影院\r\n * @param key：行政区的名字\r\n \t\t page: 当前是第几页\r\n * @return 返回10家电影院\r\n * */\r\nrouter.get('/getCinemaByDistrict', async (req, res, next) => {\r\n\tconsole.log('########按照行政区搜索：获取10个电影院#########');\r\n\tlet key = req.query.district\r\n\tlet page = req.query.currentPage\r\n\tlet page_length = 10;   // 每一页有10个电影院\r\n\tlet count = (page - 1) * page_length\r\n\tif (key == '全部') {\r\n\t\t// 按照电影院名进行排序，-1为倒序\r\n\t\tlet cinemaArr = await CinemaModel.find({}).limit(page_length).skip(count).sort({cinema_name: -1}).exec()\r\n\t\tlet findCinemas = []\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t} else {\r\n\t\tlet cinemaArr = await CinemaModel.find({district: key}).limit(page_length).skip(count).exec()\r\n\t\tlet findCinemas = []\r\n    // console.log(cinemaArr)\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t}\r\n});\r\n\r\n\r\n/**\r\n * @desc 按照品牌搜索电影院\r\n * @param key：品牌的名字\r\n \t\t page: 当前是第几页\r\n * @return 返回10家电影院\r\n * */\r\nrouter.get('/getCinemaByBrand', async (req, res, next) => {\r\n\tconsole.log('########按照品牌搜索：获取10个电影院#########');\r\n\tlet key = req.query.brand\r\n\tlet page = req.query.currentPage\r\n\tlet page_length = 10;   // 每一页有10个电影院\r\n\tlet count = (page - 1) * page_length\r\n\tif (key == '全部') {\r\n\t\t// 按照电影院名进行排序，-1为倒序\r\n\t\tlet cinemaArr = await CinemaModel.find({}).limit(page_length).skip(count).sort({cinema_name: -1}).exec()\r\n\t\tlet findCinemas = []\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t} else {\r\n\t\t// 在电影院的名字中模糊搜索\r\n\t\tlet brand = key.substring(0, 2)\r\n\t\tconsole.log(brand)\r\n\t\tlet cinemaArr = await CinemaModel.find({cinema_name: {$regex: brand}}).limit(page_length).skip(count).sort({cinema_name: -1}).exec()\r\n    \t// console.log(cinemaArr)\r\n\t\tlet findCinemas = []\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t}\r\n});\r\n\r\n/**\r\n * @desc 按照影院名获取影院数据\r\n * @param cinemaName：影院名\r\n * @return 影院信息\r\n * */\r\nrouter.get('/getCinemaByName', async (req, res, next) => {\r\n  let cinemaName = req.query.cinemaName\r\n  console.log('########获取' + cinemaName + '数据#########');\r\n  let cinemaArr = await CinemaModel.find({cinema_name: cinemaName}).exec()\r\n  let findCinemas = []\r\n  for (let item of cinemaArr) {\r\n    let ob = JSON.parse(JSON.stringify(item))\r\n    findCinemas.push(ob)\r\n  }\r\n  return _dbSuccess(res, '获取' + cinemaName + '数据成功', findCinemas[0])\r\n});\r\n\r\n/**\r\n * @desc 按照品牌及行政区获取影院数据\r\n * @param district：行政区\r\n             brand: 品牌\r\n       currentpage: 当前第几页\r\n * @return 影院信息\r\n * */\r\nrouter.get('/getCinemaByAll', async (req, res, next) => {\r\n\tlet brand = req.query.brand\r\n\tlet district = req.query.district\r\n\tlet page = req.query.currentPage\r\n\tlet page_length = 10;   // 每一页有10个电影院\r\n\tlet count = (page - 1) * page_length\r\n\tconsole.log('########按照全部搜索：获取10个电影院#########');\r\n\tif (brand == '全部' && district == '全部') {   // 按照电影院名进行排序\r\n\t\tlet cinemaArr = await CinemaModel.find({}).limit(page_length).skip(count).sort({cinema_name: -1}).exec()\r\n\t\tlet findCinemas = []\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t} else if (district == '全部') { // 只通过品牌查询\r\n\t\t// 在电影院的名字中模糊搜索\r\n\t\tlet cinemaArr = await CinemaModel.find({cinema_name: {$regex: brand}}).limit(page_length).skip(count).sort({cinema_name: -1}).exec()\r\n\t\tlet findCinemas = []\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t} else if (brand == '全部') {    // 只通过行政区查询\r\n\t\tlet cinemaArr = await CinemaModel.find({district: district}).limit(page_length).skip(count).exec()\r\n\t\tlet findCinemas = []\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t} else {\r\n\t\tlet key = brand.substring(0, 2)\r\n\t\tconsole.log(\"all: \")\r\n\t\tconsole.log(key)\r\n\t\tlet cinemaArr = await CinemaModel.find({cinema_name: {$regex: key}, district: district}).limit(page_length).skip(count).exec()\r\n\t\tlet findCinemas = []\r\n\t\tfor (let item of cinemaArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindCinemas.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取电影院成功', findCinemas)\r\n\t}\r\n});\r\n\r\nexport default router\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/cinema.js","import { _dbError, _dbSuccess} from '../function/function'\r\nconst express = require('express')\r\nconst jwt = require(\"jsonwebtoken\")\r\nconst expressWebToken = require(\"express-jwt\")\r\nimport UsersModel from '../model/users'\r\nconst router = express.Router()\r\nvar app = express()\r\n\r\nconst jwtSecret = 'super_secret';\r\nconst jwtExpire = '168h';\r\n\r\nrouter.use(expressWebToken({\r\n  requestProperty: \"account\",\r\n  credentialsRequired: false,\r\n  secret: jwtSecret,\r\n}));\r\n\r\nrouter.use((req, res, next) => {\r\n  Object.setPrototypeOf(req, app.request)\r\n  Object.setPrototypeOf(res, app.response)\r\n  req.res = res\r\n  res.req = req\r\n  next()\r\n})\r\n\r\n/**\r\n * @desc 用户登录\r\n * @param cellphone：手机号\r\n password: 密码\r\n * @return 返回 登陆信息\r\n * */\r\nrouter.post('/login', async (req, res, next) => {\r\n  console.log('########用户登录#########');\r\n  let findUser = await UsersModel.find({cellphone: req.body.cellphone}).exec()\r\n  let checkPwd = findUser[0] ? findUser[0].password : ''\r\n  let inputPwd = req.body.password\r\n\r\n  if (findUser.length === 0) {\r\n    res.status(401).json({ message: '用户名或者密码错误' })\r\n  }\r\n  else {\r\n    if (checkPwd === inputPwd) {\r\n      let account = { id: 123, cellphone : req.body.cellphone };\r\n      const token = jwt.sign(account, jwtSecret, {\r\n        expiresIn: jwtExpire\r\n      });\r\n      return res.json({ cellphone: req.body.cellphone, token })\r\n    } else {\r\n      res.status(401).json({ message: '用户名或者密码错误' })\r\n    }\r\n  }\r\n});\r\n\r\n/**\r\n * @desc 用户注册\r\n * @param  username: 用户名\r\n          cellphone：手机号\r\n           password: 密码\r\n * @return 返回 注册信息\r\n * */\r\nrouter.post('/register', async (req, res, next) => {\r\n  console.log('########用户注册#########');\r\n  cell = req.body.cellphone\r\n  let findUser = await UsersModel.find({cellphone: cell}).exec()\r\n  if (findUser.length != 0) {\r\n    res.status(401).json({ message: '注册失败: 该手机号已注册' })\r\n  }\r\n  var newUser = new UsersModel ({\r\n    username: req.body.username,\r\n    cellphone: req.body.cellphone,\r\n    password: req.body.password\r\n  })\r\n  console.log('注册中')\r\n  newUser.save(function (err){\r\n    if (err) {\r\n      console.log('失败')\r\n      res.status(401).json({ message: '注册失败' })\r\n    } else {\r\n      console.log('成功')\r\n      return res.json({ cellphone: req.body.cellphone, username: req.body.username })\r\n    }\r\n  })\r\n});\r\n\r\n/**\r\n * @desc 删除用户\r\n * @param  cellphone：手机号\r\n * @return 返回 删除信息\r\n * */\r\nrouter.post('/delete', async (req, res, next) => {\r\n  console.log('########删除用户#########');\r\n  var deleUser = {cellphone: req.body.cellphone}\r\n\r\n  newUser.remove(deleUser, function (err){\r\n    if (err) {\r\n      console.log('失败')\r\n      res.status(401).json({ message: '删除失败' })\r\n    } else {\r\n      console.log('删除成功')\r\n      return _dbSuccess(res, '删除用户成功')\r\n    }\r\n  })\r\n});\r\n\r\n\r\nrouter.get('/statistics', async (req, res, next) =>{\r\n  console.log(\"aaa:\", req.account);\r\n  return res.json([{ foo: 10 }, { bar: 20 }])\r\n})\r\n\r\n// Mock Users\r\nconst users = [\r\n  { name: 'Alexandre' },\r\n  { name: 'Pooya' },\r\n  { name: 'Sébastien' }\r\n]\r\n\r\n/* GET users listing. */\r\nrouter.get('/users', function (req, res, next) {\r\n  res.json(users)\r\n})\r\n\r\n/* GET user by ID. */\r\nrouter.get('/users/:id', function (req, res, next) {\r\n  const id = parseInt(req.params.id)\r\n  if (id >= 0 && id < users.length) {\r\n    res.json(users[id])\r\n  } else {\r\n    res.sendStatus(404)\r\n  }\r\n})\r\n\r\nexport default router\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/users.js","import mongoose from 'mongoose'\r\nconst Schema = mongoose.Schema\r\n\r\n/**\r\n * @desc 用户表\r\n */\r\nconst usersSchema = new Schema({\r\n  id: String,\r\n  username: { type: String, default: \"default-xxx\"}, // 用户名\r\n  password: {type: String}, // 密码\r\n  email: {type: String, default: \"\"}, // email\r\n  cellphone: {type: String}, // phone\r\n  portrait: {type: String, default: \"../../assets/img/logo/login-default-portrait.png\"} // 头像\r\n})\r\n\r\n/**\r\n * @desc构建表模型\r\n */\r\nconst UsersModel = mongoose.model('users', usersSchema, 'users')\r\n\r\nexport default UsersModel\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/model/users.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"express-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-jwt\"\n// module id = 23\n// module chunks = 0","import NewsModel  from '../model/news'\r\nimport  VideoModel from '../model/videos'\r\nimport { _dbError, _dbSuccess} from '../function/function'\r\nimport { Router } from 'express'\r\nconst router = Router();\r\n\r\n\t/**\r\n\t * @desc 拉取新闻列表函数\r\n\t * @param page: int, 当前是第几页，规定每10个项为一页，共30页\r\n\t * @return 返回第n页的全部数据（返回一个数组，每个项为一个object）\r\n\t * */\r\n\trouter.get('/getAllNews', async (req, res, next) => {\r\n\t\tlet page = req.query.currentPage\r\n  \t\tconsole.log('########拉取第' + page + '页资讯#########')\r\n\t\tif (!page) {\r\n\t\t\t_dbError(res)\r\n      \tconsole.log('errror')\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tlet page_length = 10   // 每10项为一页\r\n\t\tlet count = (page - 1) * page_length\r\n\t\tlet newsArr = await NewsModel.find({}).limit(page_length).skip(count).exec()\r\n\t\tlet findNews = []\r\n\t\tfor (let item of newsArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindNews.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取新闻成功', findNews)\r\n\t});\r\n\r\n\r\n\t/**\r\n   * @desc 拉取热点资讯列表函数\r\n   * @param 无\r\n   * @return 返回前6项资讯\r\n   * */\r\n\r\n\trouter.get('/getHotNews', async (req, res, next) => {\r\n    \tconsole.log('########获取热点资讯#########')\r\n\t\tlet page_length = 6   // 获取前6项资讯\r\n\t\tlet newsArr = await NewsModel.find({}).limit(page_length).exec()\r\n\t\tlet findNews = []\r\n\t\tfor (let item of newsArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindNews.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取最热新闻成功', findNews)\r\n\r\n\t});\r\n\r\n\r\n\t/**\r\n   * @desc 拉取电影预告片列表函数\r\n   * @param currentPage: int, 当前是第几页，规定每15个项为一页，共20页\r\n   * @return 返回第n页的全部数据（返回一个数组，每个项为一个object）\r\n   * */\r\n\trouter.get('/getAllVideos', async (req, res, next) => {\r\n\t\tlet page = req.query.currentPage\r\n    \tconsole.log('########拉取第' + page + '页视频#########')\r\n\t\tif (!page) {\r\n\t\t\t_dbError(res)\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tlet page_length = 15   // 每10项为一页\r\n\t\tlet count = (page - 1) * page_length\r\n\t\tlet videoArr = await VideoModel.find({}).limit(page_length).skip(count).exec()\r\n\t\tlet findVideo = []\r\n\t\tfor (let item of videoArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindVideo.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取预告片成功', findVideo)\r\n\r\n\t});\r\n\r\n\t/**\r\n   * @desc 拉取热点电影预告片列表函数\r\n   * @param 无\r\n   * @return 返回前6项最热电影预告片\r\n   * */\r\n\trouter.get('/getHotVideos', async (req, res, next) => {\r\n  \t\tconsole.log('########获取热点视频#########')\r\n\t\tlet page_length = 6   // 获取前6项预告片\r\n\t\tlet videoArr = await VideoModel.find({}).limit(page_length).exec()\r\n\t\tlet findVideo = []\r\n\t\tfor (let item of videoArr) {\r\n\t\t\tlet ob = JSON.parse(JSON.stringify(item))\r\n\t\t\tfindVideo.push(ob)\r\n\t\t}\r\n\t\treturn _dbSuccess(res, '获取最热预告片成功', findVideo)\r\n\t})\r\n\r\nexport default router\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/api/news.js","import mongoose from \"mongoose\"\r\nconst Schema = mongoose.Schema\r\n/**\r\n * @desc 新闻表\r\n */\r\nconst newsSchema = new Schema({\r\n  id: String,\r\n  title: String,  //新闻标题\r\n  abstract: String,//新闻摘要\r\n  article: String, //新闻内容\r\n  cover_img_src: {type: String, default: \"../../assets/img/7.jpg\"}, //新闻封面图\r\n  content_img_src: Array, //内容图片\r\n  url: String, //新闻链接\r\n  date: String, //新闻发布时间\r\n  view_count: String, //新闻浏览人数\r\n})\r\n\r\n/**\r\n * @desc构建表模型\r\n */\r\nconst NewsModel = mongoose.model('news', newsSchema, 'MaoYanNews')\r\n\r\nexport default NewsModel\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/model/news.js","import mongoose from 'mongoose'\r\nconst Schema = mongoose.Schema\r\n\r\n/**\r\n * @desc 视频表\r\n */\r\nconst videoSchema = new Schema({\r\n  id: String,\r\n  title: String,  //视频标题\r\n  cover_img_src: String, //视频封面图\r\n  url: String, //视频链接\r\n  view_count: String, //视频播放人数\r\n})\r\n\r\n/**\r\n * @desc构建表模型\r\n */\r\nconst VideoModel = mongoose.model('videos', videoSchema, 'MaoYanVideos');\r\n\r\nexport default VideoModel\r\n\n\n\n// WEBPACK FOOTER //\n// ./server/model/videos.js","module.exports = require(\"vue\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vue\"\n// module id = 27\n// module chunks = 0","const pkg = require('./package')\r\nconst bodyParser = require('body-parser')\r\nmodule.exports = {\r\n  mode: 'universal',\r\n  head: {\r\n    titleTemplate: '%s | STAR MOVIE',\r\n    meta: [\r\n      { charset: 'utf-8' },\r\n      { name: 'viewport', content: 'width=device-width, initial-scale=1' },\r\n      { hid: 'description', name: 'description', content: pkg.description }\r\n    ],\r\n    link: [\r\n      // { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' }\r\n    ]\r\n  },\r\n  loading: { color: '#FFFFFF' },\r\n\r\n  css: [\r\n    '~/assets/css/base.css',\r\n    '~/assets/css/font-awesome/css/font-awesome.min.css'\r\n  ],\r\n\r\n  modules: [\r\n    '@nuxtjs/axios',\r\n    'bootstrap-vue/nuxt'\r\n  ],\r\n  serverMiddleware: [\r\n    bodyParser.json()\r\n  ],\r\n\r\n  env: {\r\n    baseUrl: process.env.BASE_URL || 'http://localhost:3389',\r\n    HOST: '127.0.0.1',//0.0.0.0/127.0.0.1\r\n    PORT: '3000',//80/3000\r\n    // NODE_ENV : 'production'//设置生产/开发模式 production/development\r\n  },\r\n\r\n  build: {\r\n    extractCSS: true,\r\n    vendor: ['axios'],\r\n    extend(config, ctx) {\r\n      // Run ESLint on save\r\n      if (ctx.isDev && ctx.isClient) {\r\n        config.module.rules.push({\r\n          enforce: 'pre',\r\n          test: /\\.(js|vue|json)$/,\r\n          loader: 'eslint-loader',\r\n          exclude: /(node_modules)/\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./nuxt.config.js","module.exports = {\"name\":\"sad-project\",\"version\":\"1.0.0\",\"description\":\"My tremendous Nuxt.js project\",\"author\":\"SAD\",\"private\":true,\"scripts\":{\"dev\":\"backpack dev\",\"build\":\"nuxt build && backpack build && npm start\",\"start\":\"cross-env NODE_ENV=production node build/main.js\",\"generate\":\"nuxt generate\",\"lint\":\"eslint --ext .js,.vue --ignore-path .gitignore .\",\"precommit\":\"npm run lint\"},\"dependencies\":{\"@nuxtjs/axios\":\"^5.0.0\",\"body-parser\":\"^1.18.3\",\"bootstrap\":\"^4.0.0-beta.2\",\"bootstrap-vue\":\"^2.0.0-rc.11\",\"crypto\":\"^1.0.1\",\"dotenv\":\"^6.0.0\",\"express\":\"^4.15.3\",\"express-jwt\":\"^5.3.1\",\"fs\":\"0.0.1-security\",\"http\":\"0.0.0\",\"jquery\":\"^3.3.1\",\"js-cookie\":\"^2.2.0\",\"jsonwebtoken\":\"^8.3.0\",\"jwt-decode\":\"^2.2.0\",\"mongoose\":\"^5.1.6\",\"nuxt\":\"^1.0.0\",\"tracer\":\"^0.9.0\",\"vue\":\"^2.5.16\",\"vue-baidu-map\":\"^0.21.10\",\"vuelidate\":\"^0.7.4\"},\"devDependencies\":{\"babel-core\":\"^6.26.3\",\"babel-eslint\":\"^8.2.1\",\"babel-polyfill\":\"^6.26.0\",\"babel-preset-es2015\":\"^6.24.1\",\"backpack-core\":\"^0.7.0\",\"cross-env\":\"^5.0.1\",\"eslint\":\"^4.15.0\",\"eslint-loader\":\"^2.0.0\",\"eslint-plugin-vue\":\"^4.0.0\",\"nodemon\":\"^1.11.0\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}